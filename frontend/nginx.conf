# server {
#     listen 80; # Nginx escucha en el puerto 80 dentro del contenedor
#     listen [::]:80;

#     root /usr/share/nginx/html; # Ruta donde Nginx espera los archivos de React
#     index index.html index.htm;

#     location / {
#         try_files $uri $uri/ /index.html; # CRÍTICO: Esto hace que todas las rutas vayan a index.html para React Router
#     }

#     # Opcional: Bloquear acceso a archivos sensibles o de configuración
#     # location ~ /\.ht {
#     #     deny all;
#     # }
# }

server {
    listen 80;

    location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Proxy inverso para las peticiones a la API del backend
    # ¡CRÍTICO: CAMBIO AQUI EN LA RUTA '/api/' Y proxy_pass!
    location /api/ {
        # Esta reescritura de URL quita '/api' del inicio de la ruta antes de pasarla al backend.
        # Por ejemplo, /api/login se convierte en /login para el backend.
        # Pero como tu backend tiene /api/login, necesitamos que NO reescriba.
        # Vamos a asegurar que Nginx pasa exactamente la ruta.
        
        # Elimina la directiva 'rewrite' si la tenías o cualquier otra reescritura.
        # Asegúrate de que proxy_pass tenga la barra al final para que conserve /api/.
        proxy_pass http://backend:5001/api/; # <--- ¡CAMBIO CLAVE: Asegura la barra al final de /api/!
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host; # Asegura que el backend vea el host original (localhost:3001)
        proxy_cache_bypass $http_upgrade;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
