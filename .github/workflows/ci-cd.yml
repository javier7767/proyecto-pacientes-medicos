name: CI/CD Docker Compose

on:
  push:
    branches:
      - main
      - develop

jobs:
  build_and_push_docker_images:
    runs-on: ubuntu-latest

    steps: # <- Asegúrate de que "steps:" tiene 4 espacios de indentación
      - name: Checkout Repository # <- Asegúrate de que "- name:" tiene 6 espacios de indentación
        uses: actions/checkout@v4 # <- Asegúrate de que "uses:" tiene 8 espacios de indentación

      - name: Set up Docker Buildx # <- Este también debe tener 6 espacios
        uses: docker/setup-buildx-action@v3 # <- Este también debe tener 8 espacios

      - name: Login to Docker Hub # <- Y así sucesivamente para todos los pasos
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 4: Construir y empujar la imagen del backend
      - name: Build and Push Backend Image
        run: |
          DOCKER_REPO="javidocky/proyecto-pacientes-medicos-backend" # ¡CAMBIA ESTO!
          TAG="latest"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG="prod-${{ github.sha }}"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            TAG="dev-${{ github.sha }}"
          fi
          echo "Building backend image: ${DOCKER_REPO}:${TAG}"
          docker build -t ${DOCKER_REPO}:${TAG} ./backend
          docker push ${DOCKER_REPO}:${TAG}
          echo "Image ${DOCKER_REPO}:${TAG} pushed successfully."

      # Paso 5: Construir y empujar la imagen del frontend
      - name: Build and Push Frontend Image
        run: |
          DOCKER_REPO="javidocky/proyecto-pacientes-medicos-frontend" # ¡CAMBIA ESTO!
          TAG="latest"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG="prod-${{ github.sha }}"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            TAG="dev-${{ github.sha }}"
          fi
          echo "Building frontend image: ${DOCKER_REPO}:${TAG}"
          docker build -t ${DOCKER_REPO}:${TAG} \
            --build-arg REACT_APP_API_URL=http://backend:5001 \
            ./frontend
          docker push ${DOCKER_REPO}:${TAG}
          echo "Image ${DOCKER_REPO}:${TAG} pushed successfully."

      # Paso 6 (Opcional): Levantar Docker Compose para pruebas dentro del CI
      - name: Run Docker Compose (Optional - for testing the composition)
        run: |
          echo "Running Docker Compose up to test the composition..."
          docker compose -f docker-compose.yml up --build -d
          sleep 30
          docker ps
          echo "Testing backend health check..."
          curl http://localhost:5001/api/saludo || exit 1
          echo "Testing frontend accessibility..."
          curl http://localhost:3001 || exit 1
          docker compose down
